apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-kong
  namespace: poc
  labels:
    app: poc-kong
spec:
  selector:
    matchLabels:
      app: poc-kong # usado no selector do service
  replicas: 1
  template:
    metadata:
      labels:
        app: "poc-kong"
    spec:
      containers:
        - name: poc-kong
          image: "mnikkel/poc-kong:v2.1"

---
apiVersion: v1
kind: Service
metadata:
  namespace: poc
  annotations:
    ingress.kubernetes.io/service-upstream: "true"
  name: poc-kong-service
spec:
  selector:
    app: poc-kong
  type: LoadBalancer
  ports:
    - name: poc-kong-service
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  namespace: poc
  name: app-jwt
config:
  header_names:
    - Authorization
plugin: jwt
---
apiVersion: configuration.konghq.com/v1
kind: KongConsumer
metadata:
  namespace: kong
  name: admin
  annotations:
    kubernetes.io/ingress.class: kong
username: admin
credentials:
  - app-admin-jwt
---
apiVersion: v1
kind: Secret
metadata:
  namespace: kong
  name: app-admin-jwt
stringData:
  algorithm: HS256
  key: pocissuer
  kongCredType: jwt
  secret: supersecret
type: Opaque

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-demo-ingress
  namespace: poc
  annotations:
    konghq.com/plugins: app-jwt
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: poc-kong-service
                port:
                  number: 80